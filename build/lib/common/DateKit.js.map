{"version":3,"file":"DateKit.js","sourceRoot":"","sources":["../../../../src/common/DateKit.ts"],"names":[],"mappings":"AAEA;IAAA;IAwDA,CAAC;IAvDU,uBAAe,GAAtB,UAAuB,IAAY,EAAE,IAAmB;QACpD,IAAI,IAAI,GAAG,CAAC,EAAE;YACV,MAAM,IAAI,KAAK,CAAC,kDAAkD,CAAC,CAAC;SACvE;QACD,OAAO,OAAO,CAAC,sBAAsB,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACvD,CAAC;IAEM,sBAAc,GAArB,UAAsB,IAAY,EAAE,IAAmB;QACnD,IAAI,IAAI,GAAG,CAAC,EAAE;YACV,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;SACxE;QACD,OAAO,OAAO,CAAC,sBAAsB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACtD,CAAC;IAEM,aAAK,GAAZ,UAAa,IAAmB;QAC5B,OAAO,OAAO,CAAC,sBAAsB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;IACnD,CAAC;IAED;;;OAGG;IACI,aAAK,GAAZ,UAAa,IAAY;QACrB,IAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5B,OAAO,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;IAC/C,CAAC;IAEM,cAAM,GAAb,UAAc,IAAiB,EAAE,IAA2E;QAA3E,qBAAA,EAAA,gBAA2E;QACxG,IAAI,IAAI,KAAK,IAAI,EAAE;YACf,IAAM,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;YAChC,IAAM,YAAY,GACd,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;gBACjD,GAAG;gBACH,IAAI;qBACC,OAAO,EAAE;qBACT,QAAQ,EAAE;qBACV,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;YAC1B,QAAQ,IAAI,EAAE;gBACV,KAAK,SAAS;oBACV,OAAO,IAAI,GAAG,GAAG,GAAG,YAAY,CAAC;gBACrC,KAAK,WAAW;oBACZ,OAAO,IAAI,GAAG,GAAG,GAAG,YAAY,GAAG,GAAG,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/E,KAAK,SAAS;oBACV,OAAO,YAAY,CAAC;gBACxB,KAAK,mBAAmB;oBACpB,OAAO,YAAY,GAAG,GAAG,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;aACrE;SACJ;QACD,OAAO,GAAG,CAAC;IACf,CAAC;IAEc,8BAAsB,GAArC,UAAsC,QAAgB,EAAE,IAAmB;QACvE,IAAM,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;QACzB,OAAO,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE,KAAK,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,OAAO,EAAE,GAAG,QAAQ,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE,KAAK,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,OAAO,EAAE,GAAG,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/M,CAAC;IACL,cAAC;AAAD,CAAC,AAxDD,IAwDC","sourcesContent":["type DayStartOrEnd = \"day-end\" | \"day-start\";\n\nexport class DateKit {\n    static daysBeforeToday(days: number, type: DayStartOrEnd): Date {\n        if (days < 0) {\n            throw new Error(\"Days must be >=0, or use DateUtil.daysAfterToday\");\n        }\n        return DateKit.getDateRelativeToToday(-days, type);\n    }\n\n    static daysAfterToday(days: number, type: DayStartOrEnd): Date {\n        if (days < 0) {\n            throw new Error(\"Days must be >=0, or use DateUtil.daysBeforeToday\");\n        }\n        return DateKit.getDateRelativeToToday(days, type);\n    }\n\n    static today(type: DayStartOrEnd): Date {\n        return DateKit.getDateRelativeToToday(0, type);\n    }\n\n    /**\n     * @param text should match YYYY-MM-DD format exactly\n     * Otherwise, it returns NULL\n     */\n    static parse(text: string): Date | null {\n        const date = new Date(text);\n        return isNaN(date.getTime()) ? null : date;\n    }\n\n    static format(date: Date | null, type: \"default\" | \"with-time\" | \"no-year\" | \"no-year-with-time\" = \"default\"): string {\n        if (date !== null) {\n            const year = date.getFullYear();\n            const monthAndDate =\n                (date.getMonth() + 1).toString().padStart(2, \"0\") +\n                \"-\" +\n                date\n                    .getDate()\n                    .toString()\n                    .padStart(2, \"0\");\n            switch (type) {\n                case \"default\":\n                    return year + \"-\" + monthAndDate;\n                case \"with-time\":\n                    return year + \"-\" + monthAndDate + \" \" + date.toTimeString().split(\" \")[0];\n                case \"no-year\":\n                    return monthAndDate;\n                case \"no-year-with-time\":\n                    return monthAndDate + \" \" + date.toTimeString().split(\" \")[0];\n            }\n        }\n        return \"-\";\n    }\n\n    private static getDateRelativeToToday(diffDays: number, type: DayStartOrEnd): Date {\n        const today = new Date();\n        return type === \"day-end\" ? new Date(today.getFullYear(), today.getMonth(), today.getDate() + diffDays, 23, 59, 59) : new Date(today.getFullYear(), today.getMonth(), today.getDate() + diffDays, 0, 0, 0);\n    }\n}\n"]}