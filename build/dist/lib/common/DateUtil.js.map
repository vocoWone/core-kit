{"version":3,"file":"DateUtil.js","sourceRoot":"","sources":["../../../../src/common/DateUtil.ts"],"names":[],"mappings":"AAEA;IAAA;IAwDA,CAAC;IAvDU,wBAAe,GAAtB,UAAuB,IAAY,EAAE,IAAmB;QACpD,IAAI,IAAI,GAAG,CAAC,EAAE;YACV,MAAM,IAAI,KAAK,CAAC,kDAAkD,CAAC,CAAC;SACvE;QACD,OAAO,QAAQ,CAAC,sBAAsB,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACxD,CAAC;IAEM,uBAAc,GAArB,UAAsB,IAAY,EAAE,IAAmB;QACnD,IAAI,IAAI,GAAG,CAAC,EAAE;YACV,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;SACxE;QACD,OAAO,QAAQ,CAAC,sBAAsB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACvD,CAAC;IAEM,cAAK,GAAZ,UAAa,IAAmB;QAC5B,OAAO,QAAQ,CAAC,sBAAsB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;IACpD,CAAC;IAED;;;OAGG;IACI,cAAK,GAAZ,UAAa,IAAY;QACrB,IAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5B,OAAO,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;IAC/C,CAAC;IAEM,eAAM,GAAb,UAAc,IAAiB,EAAE,IAA2E;QAA3E,qBAAA,EAAA,gBAA2E;QACxG,IAAI,IAAI,KAAK,IAAI,EAAE;YACf,IAAM,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;YAChC,IAAM,YAAY,GACd,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;gBACjD,GAAG;gBACH,IAAI;qBACC,OAAO,EAAE;qBACT,QAAQ,EAAE;qBACV,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;YAC1B,QAAQ,IAAI,EAAE;gBACV,KAAK,SAAS;oBACV,OAAO,IAAI,GAAG,GAAG,GAAG,YAAY,CAAC;gBACrC,KAAK,WAAW;oBACZ,OAAO,IAAI,GAAG,GAAG,GAAG,YAAY,GAAG,GAAG,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/E,KAAK,SAAS;oBACV,OAAO,YAAY,CAAC;gBACxB,KAAK,mBAAmB;oBACpB,OAAO,YAAY,GAAG,GAAG,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;aACrE;SACJ;QACD,OAAO,GAAG,CAAC;IACf,CAAC;IAEc,+BAAsB,GAArC,UAAsC,QAAgB,EAAE,IAAmB;QACvE,IAAM,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;QACzB,OAAO,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE,KAAK,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,OAAO,EAAE,GAAG,QAAQ,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE,KAAK,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,OAAO,EAAE,GAAG,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/M,CAAC;IACL,eAAC;AAAD,CAAC,AAxDD,IAwDC","sourcesContent":["type DayStartOrEnd = \"day-end\" | \"day-start\";\r\n\r\nexport class DateUtil {\r\n    static daysBeforeToday(days: number, type: DayStartOrEnd): Date {\r\n        if (days < 0) {\r\n            throw new Error(\"Days must be >=0, or use DateUtil.daysAfterToday\");\r\n        }\r\n        return DateUtil.getDateRelativeToToday(-days, type);\r\n    }\r\n\r\n    static daysAfterToday(days: number, type: DayStartOrEnd): Date {\r\n        if (days < 0) {\r\n            throw new Error(\"Days must be >=0, or use DateUtil.daysBeforeToday\");\r\n        }\r\n        return DateUtil.getDateRelativeToToday(days, type);\r\n    }\r\n\r\n    static today(type: DayStartOrEnd): Date {\r\n        return DateUtil.getDateRelativeToToday(0, type);\r\n    }\r\n\r\n    /**\r\n     * @param text should match YYYY-MM-DD format exactly\r\n     * Otherwise, it returns NULL\r\n     */\r\n    static parse(text: string): Date | null {\r\n        const date = new Date(text);\r\n        return isNaN(date.getTime()) ? null : date;\r\n    }\r\n\r\n    static format(date: Date | null, type: \"default\" | \"with-time\" | \"no-year\" | \"no-year-with-time\" = \"default\"): string {\r\n        if (date !== null) {\r\n            const year = date.getFullYear();\r\n            const monthAndDate =\r\n                (date.getMonth() + 1).toString().padStart(2, \"0\") +\r\n                \"-\" +\r\n                date\r\n                    .getDate()\r\n                    .toString()\r\n                    .padStart(2, \"0\");\r\n            switch (type) {\r\n                case \"default\":\r\n                    return year + \"-\" + monthAndDate;\r\n                case \"with-time\":\r\n                    return year + \"-\" + monthAndDate + \" \" + date.toTimeString().split(\" \")[0];\r\n                case \"no-year\":\r\n                    return monthAndDate;\r\n                case \"no-year-with-time\":\r\n                    return monthAndDate + \" \" + date.toTimeString().split(\" \")[0];\r\n            }\r\n        }\r\n        return \"-\";\r\n    }\r\n\r\n    private static getDateRelativeToToday(diffDays: number, type: DayStartOrEnd): Date {\r\n        const today = new Date();\r\n        return type === \"day-end\" ? new Date(today.getFullYear(), today.getMonth(), today.getDate() + diffDays, 23, 59, 59) : new Date(today.getFullYear(), today.getMonth(), today.getDate() + diffDays, 0, 0, 0);\r\n    }\r\n}\r\n"]}